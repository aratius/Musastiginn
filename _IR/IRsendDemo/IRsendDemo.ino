
#include <M5StickCPlus.h>
#include <Arduino.h>
#include <IRremoteESP8266.h>
#include <IRsend.h>

const uint16_t kIrLed = 9;  // ESP8266 GPIO pin to use. Recommended: 4 (D2).

IRsend irsend(kIrLed);  // Set the GPIO to be used to sending the message.

// Example of data captured by IRrecvDumpV2.ino
uint16_t rawData[359] = {5064, 2142,  376, 1784,  376, 706,  374, 708,  372, 708,  374, 1784,  376, 708,  372, 706,  374, 706,  374, 706,  398, 1760,  378, 706,  374, 1784,  376, 1786,  376, 706,  374, 1784,  376, 1786,  376, 1784,  376, 1784,  376, 1784,  376, 706,  374, 1784,  400, 684,  372, 708,  372, 706,  374, 708,  372, 706,  374, 706,  374, 1784,  376, 1784,  376, 706,  374, 734,  346, 734,  346, 706,  374, 706,  374, 1784,  376, 706,  374, 706,  372, 734,  346, 706,  374, 706,  398, 710,  346, 706,  374, 706,  374, 708,  372, 706,  398, 684,  372, 708,  372, 706,  374, 708,  372, 1784,  376, 1786,  376, 1784,  376, 1784,  376, 706,  374, 708,  372, 706,  374, 29524,  5090, 2116,  402, 1758,  402, 682,  398, 682,  374, 704,  376, 1784,  402, 682,  374, 706,  374, 706,  374, 704,  374, 1784,  378, 704,  374, 1782,  402, 1760,  402, 682,  372, 1784,  402, 1760,  378, 1782,  402, 1760,  402, 1760,  378, 704,  400, 1760,  402, 680,  398, 708,  372, 682,  398, 710,  346, 706,  374, 706,  398, 1758,  378, 1782,  404, 682,  398, 708,  372, 682,  374, 706,  398, 682,  398, 710,  348, 706,  398, 682,  376, 732,  346, 706,  376, 704,  374, 1784,  378, 1784,  378, 732,  348, 706,  398, 1760,  378, 1782,  378, 1782,  378, 706,  374, 706,  374, 706,  374, 704,  376, 704,  376, 734,  346, 706,  398, 710,  346, 704,  376, 1784,  378, 732,  348, 706,  374, 706,  374, 706,  374, 1784,  378, 706,  374, 734,  346, 706,  374, 734,  348, 706,  374, 706,  374, 706,  374, 704,  376, 706,  374, 704,  376, 704,  376, 704,  376, 732,  346, 706,  374, 706,  374, 706,  374, 704,  400, 682,  374, 706,  374, 706,  374, 1784,  378, 1784,  376, 1784,  378, 706,  374, 706,  374, 706,  374, 1784,  378, 704,  374, 1784,  378, 704,  374, 1784,  376, 706,  374, 706,  374, 706,  374, 734,  346, 706,  374, 706,  374, 706,  372, 706,  374, 706,  374, 706,  374, 704,  374, 708,  372, 706,  374, 706,  374, 708,  372, 706,  374, 1784,  376, 706,  374, 706,  374, 1782,  378, 1784,  378, 1782,  378, 1784,  376, 1784,  378, 1782,  378, 1784,  376, 1784,  378};  // DAIKIN176

void setup() {
  M5.begin();
  irsend.begin();
#if ESP8266
  Serial.begin(115200, SERIAL_8N1, SERIAL_TX_ONLY);
#else  // ESP8266
  Serial.begin(115200, SERIAL_8N1);
#endif  // ESP8266
}

void loop() {
  M5.Lcd.println("a rawData capture from IRrecvDumpV2");
irsend.sendRaw(rawData, 359, 38);  // (data, len, herz)
  delay(2000);
}
